name: Build and Push Docker Images

on:
  push:
    branches: ["ci/github-actions"]

jobs:
  push-images:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create .env for frontend
        run: |
          cat > apps/frontend/.env <<EOF
          NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}
          NEXT_PUBLIC_LIVEKIT_URL=${{ secrets.NEXT_PUBLIC_LIVEKIT_URL }}
          NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_PLATFORM_API_URL=${{ secrets.NEXT_PUBLIC_PLATFORM_API_URL }}
          NEXT_PUBLIC_PLATFORM_URL=${{ secrets.NEXT_PUBLIC_PLATFORM_URL }}
          EOF
          chmod 600 apps/frontend/.env

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Set image tags
        run: |
          echo "BACKEND_TAG=${{ secrets.DOCKER_USERNAME }}/backend:${GITHUB_SHA}" >> $GITHUB_ENV
          echo "FRONTEND_TAG=${{ secrets.DOCKER_USERNAME }}/frontend:${GITHUB_SHA}" >> $GITHUB_ENV
          echo "BACKEND_TAG_LATEST=${{ secrets.DOCKER_USERNAME }}/backend:latest" >> $GITHUB_ENV
          echo "FRONTEND_TAG_LATEST=${{ secrets.DOCKER_USERNAME }}/frontend:latest" >> $GITHUB_ENV

      - name: Build Docker images
        run: |
          echo "Building backend image..."
          docker build -t $BACKEND_TAG ./apps/backend
          docker tag $BACKEND_TAG $BACKEND_TAG_LATEST

          echo "Building frontend image..."
          docker build -t $FRONTEND_TAG ./apps/frontend
          docker tag $FRONTEND_TAG $FRONTEND_TAG_LATEST

      - name: Push Docker images
        run: |
          echo "Pushing backend images..."
          docker push $BACKEND_TAG
          docker push $BACKEND_TAG_LATEST

          echo "Pushing frontend images..."
          docker push $FRONTEND_TAG
          docker push $FRONTEND_TAG_LATEST

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            cd online-meeting-platform/

            echo "Pull latest images..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest || true

            echo "Stopping current containers..."
            docker compose down

            echo "Cleaning dangling images and volumes..."
            docker image prune -af

            echo "Starting containers..."
            docker compose up -d

            echo "Deploy complete!"
