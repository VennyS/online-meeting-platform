generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Room {
  id                   Int       @id @default(autoincrement())
  shortId              String    @unique
  name                 String
  description          String?
  startAt              DateTime?
  durationMinutes      Int?
  isPublic             Boolean   @default(false)
  showHistoryToNewbies Boolean   @default(false)
  passwordHash         String?
  waitingRoomEnabled   Boolean   @default(false)
  allowEarlyJoin       Boolean   @default(true)
  ownerId              Int
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  cancelled            Boolean @default(false)

  AllowedParticipant AllowedParticipant[]
}

model AllowedParticipant {
  id        Int      @id @default(autoincrement())
  roomId    Int
  userId    Int      // или String, если идентификаторы не числовые
  createdAt DateTime @default(now())

  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@unique([roomId, userId]) // чтобы один и тот же пользователь не дублировался
}