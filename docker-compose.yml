version: "3.7"

services:
  frontend:
    build:
      context: ./apps/frontend
    ports:
      - "3000:3000"
    env_file:
      - ./apps/frontend/.env

  backend-dev:
    build:
      context: ./apps/backend
      target: development
    container_name: backend-dev
    ports:
      - "3001:3001"
      - "5555:5555"
    env_file:
      - ./apps/backend/.env
    volumes:
      - ./apps/backend:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev
    depends_on:
      - postgres
      - redis

  backend-prod:
    build:
      context: ./apps/backend
      target: production
    container_name: backend-prod
    ports:
      - "3001:3001"
      - "5555:5555"
    env_file:
      - ./apps/backend/.env
    command: node dist/main
    depends_on:
      - postgres
      - redis

  # ---- LiveKit ----
  livekit:
    image: livekit/livekit-server:latest
    restart: unless-stopped
    ports:
      - "7880:7880/tcp"
      - "7881-7885:7881-7885/udp"
      - "7882:7882/tcp"
    env_file:
      - ./infrastructure/livekit/.env
    command: ["--config", "/infrastructure/livekit/livekit.yaml"]
    volumes:
      - ./infrastructure/livekit:/infrastructure/livekit

  # ---- PostgreSQL ----
  postgres:
    image: postgres:17-alpine
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - ./infrastructure/postgres/.env
    volumes:
      - pgdata:/var/lib/postgresql/data

  # ---- Redis ----
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

volumes:
  pgdata:
  redisdata:
